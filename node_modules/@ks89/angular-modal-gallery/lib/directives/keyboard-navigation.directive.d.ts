import { EventEmitter } from '@angular/core';
import * as i0 from "@angular/core";
/**
 * Directive to manage keyboard navigation.
 */
export declare class KeyboardNavigationDirective {
    /**
     * Boolean input to skip keyboard navigation.
     */
    isOpen: boolean | undefined;
    /**
     * Output to emit keyboard `code` of the pressed key (keydown).
     */
    keyboardNavigation: EventEmitter<string>;
    /**
     * Listener to catch keyboard's events and call the right method based on the key.
     * For instance, pressing esc, this will call `closeGallery(Action.KEYBOARD)` and so on.
     * If you passed a valid `keyboardConfig` esc, right and left buttons will be customized based on your data.
     * @param e KeyboardEvent caught by the listener.
     */
    onKeyDown(e: KeyboardEvent): void;
    static ɵfac: i0.ɵɵFactoryDeclaration<KeyboardNavigationDirective, never>;
    static ɵdir: i0.ɵɵDirectiveDeclaration<KeyboardNavigationDirective, "[ksKeyboardNavigation]", never, { "isOpen": { "alias": "isOpen"; "required": false; }; }, { "keyboardNavigation": "keyboardNavigation"; }, never, never, false, never>;
}
